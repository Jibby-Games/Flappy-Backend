services:
  # Game Server Manager
  manager:
    container_name: manager
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    tty: true
    env_file:
      - ./manager/.env

  # Game Server List
  list:
    container_name: list
    tty: true
    environment:
      - IP_SOURCE=XRealIp

  # Reverse Proxy
  proxy:
    container_name: proxy
    build: proxy
    env_file:
      - ./proxy/.env
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./proxy/user_conf.d:/etc/nginx/user_conf.d:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - manager
      - list

  # Metrics Storage
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--storage.tsdb.retention.time=1y'
      - '--storage.tsdb.retention.size=4GB'
      # Default commands from image:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./metrics/config:/etc/prometheus/
      - prometheus-data:/prometheus

  # Metrics Viewer
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - 3000:3000

  # System Metrics Source
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

  # Container Log Viewer
  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dozzle/data:/data
    ports:
      - 8080:8080
    environment:
      DOZZLE_AUTH_PROVIDER: simple

volumes:
  nginx_secrets: {}
  prometheus-data: {}
  grafana-data: {}
